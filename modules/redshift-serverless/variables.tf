variable "namespace" {
  type        = string
  description = "Namespace of the project, i.e. arc"
}

variable "environment" {
  type        = string
  description = "Name of the environment, i.e. dev, stage, prod"
}

variable "name" {
  description = "Name for the Redshift Serverless resources"
  type        = string
}
variable "create_random_password" {
  description = "Determines whether to create random password for cluster `master_password`"
  type        = bool
  default     = true
}
variable "master_password" {
  description = "Password for the master DB user. If null and manage_user_password is null, a random password should be generated by the calling module"
  type        = string
  sensitive   = true
  default     = null
}
variable "namespace_name" {
  description = "The name of the Redshift Serverless namespace"
  type        = string
  default     = null
}

variable "workgroup_name" {
  description = "The name of the Redshift Serverless workgroup"
  type        = string
  default     = null
}

variable "db_name" {
  description = "The name of the database to create"
  type        = string
}

variable "admin_username" {
  description = "Admin username for Redshift Serverless"
  type        = string
  default     = null
}

variable "admin_password" {
  description = "Password for the admin user. If null and manage_user_password is null, a random password should be generated by the calling module"
  type        = string
  sensitive   = true
  default     = null
}

variable "manage_user_password" {
  description = "Set to true to allow AWS to manage the admin user password in Secrets Manager"
  type        = bool
  default     = false
}
variable "manage_admin_password" {
  description = "Whether to allow Redshift to manage the admin password automatically"
  type        = bool
  default     = false
}
variable "base_capacity" {
  description = "The base data warehouse capacity in Redshift Processing Units (RPUs)"
  type        = number
  default     = 32
}

variable "max_capacity" {
  description = "The maximum data warehouse capacity in Redshift Processing Units (RPUs)"
  type        = number
  default     = 512
}

variable "publicly_accessible" {
  description = "If true, the workgroup can be accessed from a public network"
  type        = bool
  default     = false
}
variable "port" {
  type        = number
  default     = 5439
}

variable "enhanced_vpc_routing" {
  type        = bool
  default     = true
}

variable "track_name" {
  type        = string
  default     = "current"
}
variable "config_parameters" {
  type = list(object({
    parameter_key   = string
    parameter_value = string
  }))
  default = []
}

variable "subnet_ids" {
  description = "List of subnet IDs for the Redshift Serverless workgroup"
  type        = list(string)
  default     = []
}

variable "vpc_id" {
  description = "ID of the VPC for Redshift Serverless"
  type        = string
  default     = null
}

variable "vpc_security_group_ids" {
  description = "A list of Virtual Private Cloud (VPC) security groups to be associated with the workgroup"
  type        = list(string)
  default     = []
}

variable "kms_key_id" {
  description = "The ARN for the KMS encryption key"
  type        = string
  default     = null
}



variable "tags" {
  description = "Tags to apply to resources"
  type        = map(string)
  default     = {}
}
# Security Group Configuration
variable "create_security_groups" {
  description = "Whether to create security groups for Redshift Serverless resources"
  type        = bool
  default     = true
}

variable "additional_security_group_ids" {
  description = "List of additional security group IDs to attach to the domain"
  type        = list(string)
  default     = []
}

variable "security_group_data" {
  type = object({
    security_group_ids_to_attach = optional(list(string), [])
    create                       = optional(bool, true)
    description                  = optional(string, null)
    ingress_rules = optional(list(object({
      description              = optional(string, null)
      cidr_block               = optional(string, null)
      source_security_group_id = optional(string, null)
      from_port                = number
      ip_protocol              = string
      to_port                  = string
      self                     = optional(bool, false)
    })), [])
    egress_rules = optional(list(object({
      description                   = optional(string, null)
      cidr_block                    = optional(string, null)
      destination_security_group_id = optional(string, null)
      from_port                     = number
      ip_protocol                   = string
      to_port                       = string
      prefix_list_id                = optional(string, null)
    })), [])
  })
  description = "(optional) Security Group data"
  default = {
    create = false
  }
}
variable "security_group_name" {
  type        = string
  description = "Redshift Serverless resourcesr security group name"
  default     = "Redshift-Serverless-sg"
}